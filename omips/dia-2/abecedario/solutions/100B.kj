class program {

	void norte() {
    	while(!facingNorth) turnleft();
    }
    void sur() {
    	while(!facingSouth) turnleft();
    }
    void este() {
    	while(!facingEast) turnleft();
    }
    void oeste() {
    	while(!facingWest) turnleft();
    }
    void gira(a) {
    	iterate(a) turnleft();
    }

	

	void bucket(x) {
    	if(nextToABeeper) {
        	pickbeeper();
            bucket(succ(x));
        } else {
        	if(frontIsClear) {
            	move();
                bucket(0);
            }
            if(!iszero(x)) {
            	oeste();
                while(frontIsClear) move();
                este();
                iterate(pred(x)) move();
                putbeeper();
            }
        }
    }

	void divide(x) {
    	iterate(x) {
        	if(!nextToABeeper) norte();
            if(facingSouth) pickbeeper();
        }
        if(facingSouth) {
        	divide(x);
            putbeeper();
        }
    }

	void recorre(x) {
    	if(nextToABeeper) {
        	pickbeeper();
            recorre(succ(x));
        } else {
        	sur();
            move();
            if(iszero(x)) while(nextToABeeper) pickbeeper();
            else {
            	divide(x);
                if(!nextToABeeper) {
                	oeste();
                    while(frontIsClear) move();
                    norte();
                    turnoff();
                }
            }
            norte();    
            move();
            este();
            if(frontIsClear) {
            	move();
                recorre(0);
            }
        }
    }

	void findAnswer() {
    	if(!nextToABeeper && frontIsClear) {
        	move();
            findAnswer();
        } else {
        	if(nextToABeeper) {
            	oeste();
                while(frontIsClear) move();
                norte();
                move();
                move();
            } else {
            	turnoff();
            }
        }
        putbeeper();
    }

    program () {
    	este();
        bucket(0);
        oeste();
        while(frontIsClear) move();
        norte();
        move();
        este();
        bucket(0);
        oeste();
        while(frontIsClear) move();
        este();
        recorre(0);
        sur();
        move();
        oeste();
        bucket(0);
        oeste();
        while(frontIsClear) move();
        este();
        findAnswer();
        turnoff();
    }
}
